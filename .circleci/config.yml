orbs: # declare what orbs we are going to use
  node: circleci/node@5.0.3 # the node orb provides common node-related configuration
  codecov: codecov/codecov@3.2.3

version: 2.1 # using 2.1 provides access to orbs and other features

jobs:
  build-and-test:
    parallelism: 8
    resource_class: large
    executor: node/default
    steps:
      - checkout
      - node/install-packages:
          cache-path: ~/project/node_modules
          override-ci-command: npm install
      - run:
          name: Compile
          command: |
            npx hardhat compile --showsize --optimizer
      - run:
          name: Test and output gas used
          command: |
            set +e
            circleci tests glob 'test/contracts/*/*.js' |
            circleci tests split |
            xargs npm test -- --gas
            EXIT_CODE=$?
            printf "\\n"
            exit $EXIT_CODE
      - run:
          name: Create shared coverage outputs folder
          command: mkdir -p /tmp/coverage
      - run:
          name: Coverage
          command: |
            TEST_FILES="{$(circleci tests glob "test/contracts/*/*.js" | \
              circleci tests split --split-by=timings | xargs | sed -e 's/ /,/g')}"
            npm run coverage -- --testfiles "$TEST_FILES"
      - run:
          name: Save coverage
          command: |
            cp coverage.json /tmp/coverage/coverage-$CIRCLE_NODE_INDEX.json
      - persist_to_workspace:
          root: /tmp/coverage
          paths:
            - coverage-*.json
  codecov-job:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - attach_workspace:
          at: /tmp/coverage
      - run:
          name: Copy files
          command: |
            cp -R /tmp/coverage/coverage-*.json .
      - run:
          name: Remove file - only node files
          command: |
            rm coverage.json
      - run:
          name: LS
          command: |
            ls /tmp/coverage/
      - codecov/upload

workflows:
  jobs-workflow:
    jobs:
      - codecov-job:
          requires:
            - build-and-test
      - build-and-test
